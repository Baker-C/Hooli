{
  "info": {
    "name": "OMI Voice Integration API",
    "description": "Complete API collection for testing OMI voice integration endpoints",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "sessionId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/health",
          "host": ["{{baseUrl}}"],
          "path": ["api", "health"]
        },
        "description": "Check if the API is running and healthy"
      },
      "response": []
    },
    {
      "name": "Create Session",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const response = pm.response.json();",
              "    if (response.sessionId) {",
              "        pm.collectionVariables.set('sessionId', response.sessionId);",
              "        console.log('Session ID saved:', response.sessionId);",
              "    }",
              "}"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"userId\": \"test_user_123\",\n  \"context\": {\n    \"userType\": \"premium\",\n    \"priority\": \"high\",\n    \"testMode\": true\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/voice/session",
          "host": ["{{baseUrl}}"],
          "path": ["api", "voice", "session"]
        },
        "description": "Create a new voice session"
      },
      "response": []
    },
    {
      "name": "Process Text - Greeting",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"sessionId\": \"{{sessionId}}\",\n  \"text\": \"Hello, I need help with my account\",\n  \"context\": {\n    \"testMode\": true\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/voice/process-text",
          "host": ["{{baseUrl}}"],
          "path": ["api", "voice", "process-text"]
        },
        "description": "Process a greeting text message"
      },
      "response": []
    },
    {
      "name": "Process Text - Support Request",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"sessionId\": \"{{sessionId}}\",\n  \"text\": \"Can you help me resolve a billing issue?\",\n  \"context\": {\n    \"testMode\": true,\n    \"issueType\": \"billing\"\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/voice/process-text",
          "host": ["{{baseUrl}}"],
          "path": ["api", "voice", "process-text"]
        },
        "description": "Process a support request text message"
      },
      "response": []
    },
    {
      "name": "Process Audio - Upload File",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "sessionId",
              "value": "{{sessionId}}",
              "type": "text"
            },
            {
              "key": "audio",
              "src": "tests/sampleAudio/greeting.wav",
              "type": "file"
            },
            {
              "key": "context",
              "value": "{\"testMode\": true}",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "{{baseUrl}}/api/voice/process-audio",
          "host": ["{{baseUrl}}"],
          "path": ["api", "voice", "process-audio"]
        },
        "description": "Process an audio file upload"
      },
      "response": []
    },
    {
      "name": "Get Session Info",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/voice/session/{{sessionId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "voice", "session", "{{sessionId}}"]
        },
        "description": "Get information about a specific session"
      },
      "response": []
    },
    {
      "name": "Webhook - Session Created",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"event\": \"session.created\",\n  \"data\": {\n    \"sessionId\": \"{{sessionId}}\",\n    \"userId\": \"test_user_123\",\n    \"timestamp\": \"{{$isoTimestamp}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/webhooks/omi",
          "host": ["{{baseUrl}}"],
          "path": ["api", "webhooks", "omi"]
        },
        "description": "Test webhook for session created event"
      },
      "response": []
    },
    {
      "name": "Webhook - Session Message",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"event\": \"session.message\",\n  \"data\": {\n    \"sessionId\": \"{{sessionId}}\",\n    \"messageId\": \"msg_{{$randomUUID}}\",\n    \"type\": \"user\",\n    \"content\": \"Hello, I need help\",\n    \"timestamp\": \"{{$isoTimestamp}}\"\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/webhooks/omi",
          "host": ["{{baseUrl}}"],
          "path": ["api", "webhooks", "omi"]
        },
        "description": "Test webhook for session message event"
      },
      "response": []
    },
    {
      "name": "Error Test - Invalid Session",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"sessionId\": \"invalid_session_id\",\n  \"text\": \"This should fail\",\n  \"context\": {\n    \"testMode\": true\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/voice/process-text",
          "host": ["{{baseUrl}}"],
          "path": ["api", "voice", "process-text"]
        },
        "description": "Test error handling with invalid session ID"
      },
      "response": []
    },
    {
      "name": "Error Test - Empty Text",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"sessionId\": \"{{sessionId}}\",\n  \"text\": \"\",\n  \"context\": {\n    \"testMode\": true\n  }\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/voice/process-text",
          "host": ["{{baseUrl}}"],
          "path": ["api", "voice", "process-text"]
        },
        "description": "Test error handling with empty text input"
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set timestamp for requests",
          "pm.globals.set('timestamp', new Date().toISOString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has correct content type', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});"
        ]
      }
    }
  ]
}